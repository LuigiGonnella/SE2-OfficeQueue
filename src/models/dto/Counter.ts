/* tslint:disable */
/* eslint-disable */
/**
 * Office Queue API
 * API for the project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Service } from './Service';
import {
    ServiceFromJSON,
    ServiceFromJSONTyped,
    ServiceToJSON,
    ServiceToJSONTyped,
} from './Service';
import type { Queue } from './Queue';
import {
    QueueFromJSON,
    QueueFromJSONTyped,
    QueueToJSON,
    QueueToJSONTyped,
} from './Queue';

/**
 * 
 * @export
 * @interface Counter
 */
export interface Counter {
    /**
     * 
     * @type {string}
     * @memberof Counter
     */
    counterCode: string;
    /**
     * 
     * @type {Array<Service>}
     * @memberof Counter
     */
    services: Array<Service>;
    /**
     * 
     * @type {Array<Queue>}
     * @memberof Counter
     */
    queues: Array<Queue>;
}

/**
 * Check if a given object implements the Counter interface.
 */
export function instanceOfCounter(value: object): value is Counter {
    if (!('counterCode' in value) || value['counterCode'] === undefined) return false;
    if (!('services' in value) || value['services'] === undefined) return false;
    if (!('queues' in value) || value['queues'] === undefined) return false;
    return true;
}

export function CounterFromJSON(json: any): Counter {
    return CounterFromJSONTyped(json, false);
}

export function CounterFromJSONTyped(json: any, ignoreDiscriminator: boolean): Counter {
    if (json == null) {
        return json;
    }
    return {
        
        'counterCode': json['counter_code'],
        'services': ((json['services'] as Array<any>).map(ServiceFromJSON)),
        'queues': ((json['queues'] as Array<any>).map(QueueFromJSON)),
    };
}

export function CounterToJSON(json: any): Counter {
    return CounterToJSONTyped(json, false);
}

export function CounterToJSONTyped(value?: Counter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'counter_code': value['counterCode'],
        'services': ((value['services'] as Array<any>).map(ServiceToJSON)),
        'queues': ((value['queues'] as Array<any>).map(QueueToJSON)),
    };
}

