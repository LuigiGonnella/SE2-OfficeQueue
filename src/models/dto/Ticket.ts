/* tslint:disable */
/* eslint-disable */
/**
 * Office Queue API
 * API for the project
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Customer } from './Customer';
import {
    CustomerFromJSON,
    CustomerFromJSONTyped,
    CustomerToJSON,
    CustomerToJSONTyped,
} from './Customer';
import type { Service } from './Service';
import {
    ServiceFromJSON,
    ServiceFromJSONTyped,
    ServiceToJSON,
    ServiceToJSONTyped,
} from './Service';

/**
 * 
 * @export
 * @interface Ticket
 */
export interface Ticket {
    /**
     * 
     * @type {number}
     * @memberof Ticket
     */
    id: number;
    /**
     * 
     * @type {Service}
     * @memberof Ticket
     */
    service: Service;
    /**
     * 
     * @type {Customer}
     * @memberof Ticket
     */
    customer: Customer;
    /**
     * 
     * @type {Date}
     * @memberof Ticket
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the Ticket interface.
 */
export function instanceOfTicket(value: object): value is Ticket {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('service' in value) || value['service'] === undefined) return false;
    if (!('customer' in value) || value['customer'] === undefined) return false;
    return true;
}

export function TicketFromJSON(json: any): Ticket {
    return TicketFromJSONTyped(json, false);
}

export function TicketFromJSONTyped(json: any, ignoreDiscriminator: boolean): Ticket {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'service': ServiceFromJSON(json['service']),
        'customer': CustomerFromJSON(json['customer']),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function TicketToJSON(json: any): Ticket {
    return TicketToJSONTyped(json, false);
}

export function TicketToJSONTyped(value?: Ticket | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'service': ServiceToJSON(value['service']),
        'customer': CustomerToJSON(value['customer']),
        'createdAt': value['createdAt'] == null ? value['createdAt'] : value['createdAt'].toISOString(),
    };
}

